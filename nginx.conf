server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Security Headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;

    # Content Security Policy - Strict but functional
    set $csp_default "default-src 'self'";
    set $csp_script "script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com https://apis.google.com";
    set $csp_style "style-src 'self' 'unsafe-inline'";
    set $csp_img "img-src 'self' data: https: blob:";
    set $csp_font "font-src 'self' data:";
    set $csp_connect "connect-src 'self' https://*.firebaseio.com https://firestore.googleapis.com https://securetoken.googleapis.com https://identitytoolkit.googleapis.com https://firebaseinstallations.googleapis.com https://api.openweathermap.org https://api.open-meteo.com https://generativelanguage.googleapis.com https://*.sentry.io wss://*.firebaseio.com";
    set $csp_frame "frame-src https://winter-arc-tracker.firebaseapp.com https://*.firebaseapp.com";
    set $csp_frame_ancestors "frame-ancestors 'none'";
    set $csp_base "base-uri 'self'";
    set $csp_form "form-action 'self'";
    set $csp_object "object-src 'none'";
    set $csp_worker "worker-src 'self' blob:";
    set $csp_manifest "manifest-src 'self'";

    add_header Content-Security-Policy "$csp_default; $csp_script; $csp_style; $csp_img; $csp_font; $csp_connect; $csp_frame; $csp_frame_ancestors; $csp_base; $csp_form; $csp_object; $csp_worker; $csp_manifest" always;

    # Compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/wasm;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_vary on;

    # Cache Control
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location ~* \.(html)$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # SPA routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Service Worker
    location /sw.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Service-Worker-Allowed "/";
    }

    # Manifest
    location /manifest.webmanifest {
        add_header Content-Type "application/manifest+json";
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        return 404;
    }

    location ~ \.(env|git|gitignore|md|lock|json)$ {
        deny all;
        return 404;
    }
}