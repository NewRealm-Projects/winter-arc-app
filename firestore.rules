rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is owner of the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection - users can only read/write their own data
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Tracking collection - users can only read/write their own tracking data
    match /tracking/{userId}/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Groups collection - authenticated users can read all groups
    // Users can create groups and update if they're adding themselves to members
    match /groups/{groupCode} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        request.auth.uid in resource.data.members ||
        request.auth.uid in request.resource.data.members
      );
      allow delete: if false; // Groups cannot be deleted
    }

    // Weekly Top 3 collection - authenticated users can read, only system can write
    match /weeklyTop3/{snapshotId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // Allow authenticated users to write (for the weekly snapshot feature)
    }

    // Notes collection - users can only read/write their own notes
    match /notes/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }

    // AI Quotes collection - users can only read/write their own AI-generated quotes
    match /aiQuotes/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
  }
}
