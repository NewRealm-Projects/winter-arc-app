#
# Staging Deployment
#
# Trigger: Push to develop branch + CI success
# Target: winter-arc-app-staging repository
# Domain: staging.winterarc.newrealm.de
#
# This workflow deploys to staging ONLY after CI passes successfully.
# Staging is used for testing before production releases.
#

name: Deploy Staging

on:
  # Trigger after CI workflow completes successfully on develop branch
  workflow_run:
    workflows: ['CI']
    types: [completed]
    branches: [develop]

  # Allow manual deployment
  workflow_dispatch:

# Only one staging deployment at a time
concurrency:
  group: deploy-staging
  cancel-in-progress: false  # Don't cancel staging deployments

permissions:
  contents: read

jobs:
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # DEPLOY TO STAGING
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: staging
      url: https://staging.winterarc.newrealm.de

    # Only deploy if CI succeeded (or manual dispatch)
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup dependencies
        uses: ./.github/actions/setup-deps

      - name: Build for staging
        uses: ./.github/actions/build-app
        with:
          firebase-api-key: ${{ secrets.VITE_FIREBASE_API_KEY }}
          firebase-auth-domain: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          firebase-project-id: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          firebase-storage-bucket: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          firebase-messaging-sender-id: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          firebase-app-id: ${{ secrets.VITE_FIREBASE_APP_ID }}
          recaptcha-site-key: ${{ secrets.VITE_RECAPTCHA_SITE_KEY }}
          gemini-api-key: ${{ secrets.VITE_GEMINI_API_KEY }}
          sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          app-env: 'staging'
          base-path: '/'

      - name: Copy CNAME for staging
        run: |
          if [ -f "ops/pages/CNAME.staging" ]; then
            echo "📄 Copying CNAME for staging domain"
            cp ops/pages/CNAME.staging dist/CNAME
            cat dist/CNAME
          else
            echo "⚠️ No CNAME.staging file found"
          fi

      - name: Verify dist folder exists
        run: |
          echo "📂 Checking dist folder..."
          ls -lah dist/ || echo "⚠️ dist folder not found!"
          echo ""
          echo "📊 Dist folder size:"
          du -sh dist/
          echo ""
          echo "📄 Files in dist:"
          find dist/ -type f | head -20

      - name: Deploy to staging pages repository
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          repository-name: NewRealm-Projects/winter-arc-app-staging
          branch: gh-pages
          folder: dist
          token: ${{ secrets.PAGES_DEPLOY_TOKEN }}
          clean: true
          single-commit: false
          git-config-name: github-actions[bot]
          git-config-email: github-actions[bot]@users.noreply.github.com
          commit-message: |
            🧪 Deploy staging build from ${{ github.sha }}

            Version: ${{ steps.build.outputs.version }}
            Commit: ${{ github.event.head_commit.message }}
            Author: ${{ github.event.head_commit.author.name }}

      - name: Deployment summary
        run: |
          echo "✅ Staging deployment successful!"
          echo ""
          echo "🌐 URL: https://staging.winterarc.newrealm.de"
          echo "📦 Version: $(node -p "require('./package.json').version")"
          echo "🔖 Commit: ${{ github.sha }}"
          echo "👤 Author: ${{ github.event.head_commit.author.name }}"
          echo ""
          echo "📊 Deployment time: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
