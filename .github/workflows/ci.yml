name: CI - Agent Quality Gates

on:
  pull_request:
    branches: [dev, main]
  push:
    branches: [dev]

jobs:
  quality-gates:
    name: Quality Gates (Lint, TS, Tests, Performance)
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      # 1. Checkout Code
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # 3. Install Dependencies (Frozen Lockfile)
      - name: 📦 Install Dependencies
        run: npm ci

      # 4. ESLint
      - name: 🔍 Run ESLint
        run: npm run lint

      # 5. TypeScript Type Check
      - name: 🔍 TypeScript Type Check
        run: npm run typecheck

      # 6. Unit Tests (Vitest)
      - name: 🧪 Run Unit Tests (Vitest)
        run: npm run test:unit -- --coverage

      # 7. Upload Coverage Report
      - name: 📊 Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      # 8. E2E Tests (Playwright)
      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: 🧪 Run E2E Tests (Playwright)
        run: npm run test:ui

      # 9. Upload Playwright Report
      - name: 📊 Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      # 10. Build (Production)
      - name: 🔨 Build for Production
        run: npm run build

      # 11. Start Preview Server (Background)
      - name: 🚀 Start Preview Server
        run: |
          npm run preview -- --port 4173 &
          sleep 5

      # 12. Lighthouse CI
      - name: 🔦 Run Lighthouse CI
        run: npm run agent:lighthouse
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      # 13. Upload Lighthouse Reports
      - name: 📊 Upload Lighthouse Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: artifacts/lighthouse/
          retention-days: 7

      # 14. Bundle Analysis
      - name: 📦 Bundle Analysis
        run: npm run agent:bundle

      # 15. Upload Bundle Report
      - name: 📊 Upload Bundle Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bundle-report
          path: artifacts/bundle/
          retention-days: 7

      # 16. Summary
      - name: ✅ CI Summary
        if: success()
        run: |
          echo "✅ All Quality Gates Passed!"
          echo "- ESLint: ✅"
          echo "- TypeScript: ✅"
          echo "- Unit Tests: ✅"
          echo "- E2E Tests: ✅"
          echo "- Lighthouse: ✅"
          echo "- Build: ✅"

      - name: ❌ CI Failed
        if: failure()
        run: |
          echo "❌ CI Failed - Check logs above"
          exit 1
